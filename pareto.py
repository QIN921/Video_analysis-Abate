import matplotlib.pyplot
import numpy as np
from matplotlib import pyplot as plt
from matplotlib.patches import Ellipse
import matplotlib.ticker as mticker
import seaborn as sns


def pareto():
    scores = [[0.9455502549761474, 0.9503804168044989, 0.9568405265789036, 0.9519214772916319, 0.9588491134158582, 0.950514779143142],
              [0.9455502549761474,  0.959705734826952, 0.9335709656513285, 0.9506995336442372, 0.9556004036326943,
              0.9487534626038782, 0.9316490742342967, 0.9346304830175799, 0.9313453536754508, 0.9412572998969426],
              [0.9503804168044989, 0.9598273572377158, 0.9501234567901234, 0.939202657807309, 0.9270400531826491,
               0.9450094811239441, 0.9377264102121786, 0.9358686257562662, 0.9311464206389886, 0.9385531914893617],
              [0.9568405265789036, 0.9539484621778886, 0.9482270684201765, 0.9319218241042345, 0.9498545267841861,
               0.9480609418282548, 0.9254401104590956, 0.9308307264511645, 0.9319821367227756],
              [0.9519214772916319, 0.9581950895819509, 0.946514323563504, 0.9460857953597063, 0.9467137334005715,
               0.9440304973141571, 0.929345023207839, 0.9208109513082654],
              [0.9588491134158582, 0.9625147083543452, 0.94532279314888, 0.9602827330865028, 0.9547772866371982,
               0.9426485922836289, 0.9264069264069263],
              [0.950514779143142, 0.9594009983361065, 0.9514722816252673, 0.9583053127101547, 0.9556866048862679,
               0.9426286509040335]]
    sizes = [[1252411, 1250459, 1241894, 1239410, 1235579, 1235015],
             [1252411, 963214, 761324, 658451, 619887, 607722, 599032, 599085, 599732, 600890],
             [1250459, 960079, 756625, 654241, 612053, 599359, 591843, 590975, 593476, 593683],
             [1241894, 952849, 752398, 648392, 608931, 595766, 588466, 587590, 590877],
             [1239410, 951190, 749536, 647018, 608273, 593068, 585847, 586837],
             [1235579, 947641, 746488, 644780, 604097, 591870, 586810],
             [1235015, 947758, 746579, 643780, 605678, 590585]]
    for size in sizes:
        for index, item in enumerate(size):
            size[index] = item * 8/1024/10

    font = {'family': 'serif',
            'serif': 'arial',
            'weight': 600,
            'size': 10}
    plt.rc('font', **font)
    fig, ax1 = plt.subplots(figsize=(8, 6))
    font1 = {'family': 'arial',
             'weight': 600,
             'size': 18,
             }
    ax1.tick_params(labelsize=18)

    for i in range(len(sizes)):
        plt.plot(sizes[i], scores[i],
                 # 'mediumturquoise', label="Accuracy(F1 score)", linestyle='--', linewidth=3,
                 # marker='o',  # 点的形状
                 # markersize=10,  # 点的大小
                 # markeredgecolor='steelblue',  # 点的边框色
                 # markerfacecolor='steelblue',  # 点的填充色
                 )
    # 显示网格
    plt.grid(True)
    plt.xlabel("Bitrate(kbps)", font1)
    plt.ylabel("Accuracy(F1 score)", font1)
    plt.show()


if __name__ == '__main__':
    pareto()